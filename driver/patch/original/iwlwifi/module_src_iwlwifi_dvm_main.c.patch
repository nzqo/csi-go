diff --unified --recursive --no-dereference --text --unidirectional-new-file --ignore-trailing-space --ignore-space-change '--exclude=.git' '--exclude=README*' '--exclude=*.pdf' '--exclude=*.svg' '--exclude=*.vim' module_src/iwlwifi_original/dvm/main.c module_src/iwlwifi/dvm/main.c
--- module_src/iwlwifi_original/dvm/main.c	2023-04-13 16:55:55.787176598 +0200
+++ module_src/iwlwifi/dvm/main.c	2023-03-16 20:02:29.029016500 +0100
@@ -56,6 +56,7 @@
 #include "dev.h"
 #include "calib.h"
 #include "agn.h"
+#include "connector.h"
 
 
 /******************************************************************************
@@ -552,7 +553,7 @@
 	priv->contexts[IWL_RXON_CTX_BSS].exclusive_interface_modes =
 		BIT(NL80211_IFTYPE_ADHOC) | BIT(NL80211_IFTYPE_MONITOR);
 	priv->contexts[IWL_RXON_CTX_BSS].interface_modes =
-		BIT(NL80211_IFTYPE_STATION);
+		BIT(NL80211_IFTYPE_STATION) | BIT(NL80211_IFTYPE_AP);
 	priv->contexts[IWL_RXON_CTX_BSS].ap_devtype = RXON_DEV_TYPE_AP;
 	priv->contexts[IWL_RXON_CTX_BSS].ibss_devtype = RXON_DEV_TYPE_IBSS;
 	priv->contexts[IWL_RXON_CTX_BSS].station_devtype = RXON_DEV_TYPE_ESS;
@@ -786,6 +787,8 @@
 	/* At this point, the NIC is initialized and operational */
 	iwl_rf_kill_ct_config(priv);
 
+	iwl_connector_set_priv(priv);
+
 	IWL_DEBUG_INFO(priv, "ALIVE processing complete.\n");
 
 	return iwl_power_update_mode(priv, true);
@@ -1038,6 +1041,16 @@
 	priv->missed_beacon_threshold = IWL_MISSED_BEACON_THRESHOLD_DEF;
 	priv->agg_tids_count = 0;
 
+	/* Dan's parameters */
+	priv->connector_log = iwlwifi_mod_params.connector_log;
+	priv->bf_enabled = 1;		/* Enabled */
+	priv->rotate_rates = 0;		/* Disabled */
+	priv->last_rotate_rate = 0;	/* Disabled */
+	priv->rotate_rate_total = 0;	/* Disabled */
+	priv->rotate_rate_array = NULL;	/* Disabled */
+	priv->monitor_tx_rate = 0;	/* Disabled */
+	priv->bcast_tx_rate = 0;	/* Disabled */
+
 	priv->rx_statistics_jiffies = jiffies;
 
 	/* Choose which receivers/antennas to use */
@@ -1158,6 +1171,7 @@
 		REPLY_COMPRESSED_BA,
 		STATISTICS_NOTIFICATION,
 		REPLY_TX,
+		REPLY_BFEE_NOTIFICATION,
 	};
 	int i;
 
@@ -2071,19 +2085,33 @@
 		return ret;
 	}
 
+	ret = iwlagn_register_connector();
+	if (ret) {
+		pr_err("Unable to initialize connector: %d\n", ret);
+		goto error_connector_register;
+	}
+
 	ret = iwl_opmode_register("iwldvm", &iwl_dvm_ops);
 	if (ret) {
 		pr_err("Unable to register op_mode: %d\n", ret);
-		iwlagn_rate_control_unregister();
+		goto error_opmode_register;
 	}
 
 	return ret;
+
+error_opmode_register:
+	iwlagn_unregister_connector();
+error_connector_register:
+	iwlagn_rate_control_unregister();
+
+	return ret;
 }
 module_init(iwl_init);
 
 static void __exit iwl_exit(void)
 {
 	iwl_opmode_deregister("iwldvm");
+	iwlagn_unregister_connector();
 	iwlagn_rate_control_unregister();
 }
 module_exit(iwl_exit);
